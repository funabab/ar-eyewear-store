---
import { getCollection, getEntry } from 'astro:content'
import ItemCard from '../card/ItemCard.astro'
import { getEntries } from 'astro:content'
import type { CollectionEntry } from 'astro:content'

interface Props {
  collection: CollectionEntry<'collection'>['id']
}

const collections = (await getCollection('collection')).sort(
  (a, b) => a.data.order - b.data.order
)
const { collection: collectionId } = Astro.props
const collection = await getEntry('collection', collectionId)

const collectonProducts = await getEntries(collection.data.products)
---

<div class="py-5">
  <ul
    class="flex items-start gap-x-4 flex-nowrap overflow-auto scrollbar-none hover:scrollbar-thin"
  >
    {
      collections.map((collection) => (
        <li
          class:list={[
            {
              'text-black': collection.id === collectionId,
              'text-[#cacaca]': collection.id !== collectionId,
            },
          ]}
        >
          <a
            href={
              collection.id === 'new' ? '/' : `/collections/${collection.id}`
            }
            class="flex flex-col items-center"
          >
            <span class="whitespace-nowrap">{collection.data.title}</span>
            {collection.id === collectionId && <span>&#x2022;</span>}
          </a>
        </li>
      ))
    }
  </ul>

  <div class="grid grid-cols-2 sm:grid-cols-3 mt-5 gap-4">
    {
      collectonProducts.map((product) => (
        <a href={`/item/${product.id}`}>
          <ItemCard product={product} />
        </a>
      ))
    }
  </div>
</div>
